<E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.0381301Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.0080467-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue</a:Action><a:MessageID>urn:uuid:feec5c8b-7f6b-4f5f-af31-d6549d275bf3</a:MessageID><a:ReplyTo><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1">http://localhost:8080/FileService</a:To></s:Header><s:Body><t:RequestSecurityToken Context="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-3" xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust"><t:RequestType>http://schemas.xmlsoap.org/ws/2005/02/trust/Issue</t:RequestType><t:BinaryExchange ValueType="http://schemas.microsoft.com/net/2004/07/secext/WS-SPNego">YHsGBisGAQUFAqBxMG+gJDAiBgkqhkiC9xIBAgIGCSqGSIb3EgECAgYKKwYBBAGCNwICCqJHBEVgQwYKKoZIhvcSAQICAwQAMDOgAwIBBaEDAgEQohMwEaADAgEBoQowCBsGc2hhd25joxIbEGNvcnAuYXZhbmFkZS5vcmc=</t:BinaryExchange><t:KeySize>256</t:KeySize></t:RequestSecurityToken></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118812713952</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.0481579Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.0481579-04:00" Source="TransportSend" Type="System.ServiceModel.Channels.BodyWriterMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</a:Action><a:RelatesTo>urn:uuid:feec5c8b-7f6b-4f5f-af31-d6549d275bf3</a:RelatesTo></s:Header><s:Body><t:RequestSecurityTokenResponse Context="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-3" xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><t:BinaryExchange ValueType="http://schemas.microsoft.com/net/2004/07/secext/WS-SPNego">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</t:BinaryExchange></t:RequestSecurityTokenResponse></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118812767230</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.0782413Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.0782413-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</a:Action><a:MessageID>urn:uuid:8399e045-1f31-421d-8414-2f16e9b37425</a:MessageID><a:ReplyTo><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1">http://localhost:8080/FileService</a:To></s:Header><s:Body><t:RequestSecurityTokenResponse Context="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-3" xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><t:BinaryExchange ValueType="http://schemas.microsoft.com/net/2004/07/secext/WS-SPNego">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</t:BinaryExchange></t:RequestSecurityTokenResponse></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118812873388</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.1283803Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.1283803-04:00" Source="TransportSend" Type="System.ServiceModel.Channels.BodyWriterMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue</a:Action><a:RelatesTo>urn:uuid:8399e045-1f31-421d-8414-2f16e9b37425</a:RelatesTo></s:Header><s:Body><t:RequestSecurityTokenResponseCollection xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust"><t:RequestSecurityTokenResponse Context="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-3" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><t:TokenType>http://schemas.xmlsoap.org/ws/2005/02/sc/sct</t:TokenType><t:KeySize>256</t:KeySize><t:RequestedAttachedReference><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-1"></o:Reference></o:SecurityTokenReference></t:RequestedAttachedReference><t:RequestedUnattachedReference><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference URI="urn:uuid:4243e84f-ee75-441c-803d-a66cca9b8389" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference></t:RequestedUnattachedReference><t:BinaryExchange ValueType="http://schemas.microsoft.com/net/2004/07/secext/WS-SPNego">oYGTMIGQoAMKAQCigYgEgYVggYIGCiqGSIb3EgECAgMCAG9yMHCgAwIBBaEDAgEPomQwYqADAgEXolsEWZnp5NMxQpfm+jPsR0NzQjLq7r2tQGysFbYNoMVT+4u4G+WdJS4Kn7mGZhI6Hn6uQJpU/M/kjx/UX6efDVsGArNDLDl/Ak8Yhj8Q4Su85hsqCOFjjNnAMigN</t:BinaryExchange><t:Lifetime><u:Created>2006-06-15T15:09:43.088Z</u:Created><u:Expires>2006-06-15T15:24:43.088Z</u:Expires></t:Lifetime><t:RequestedSecurityToken><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-1" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:4243e84f-ee75-441c-803d-a66cca9b8389</c:Identifier></c:SecurityContextToken></t:RequestedSecurityToken><t:RequestedProofToken><e:EncryptedKey xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:EncryptionMethod Algorithm="http://schemas.xmlsoap.org/2003/03/IETF-RFC2743#GSS_Wrap"></e:EncryptionMethod><e:CipherData><e:CipherValue>YE0GCiqGSIb3EgECAgMCAREAEAD//yOt2dxT3E6Lu3pslBU1x4oONtLFXjcuJll7jqaT0xaXp+O2/wqyuYIEgwOSkWpCaoQ1WV0pCDBYAA==</e:CipherValue></e:CipherData></e:EncryptedKey></t:RequestedProofToken></t:RequestSecurityTokenResponse><t:RequestSecurityTokenResponse Context="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-3" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><t:Authenticator><t:CombinedHash>2TmPUy46GIp4i+TKdBTuXhYWwjyzuiDfyZ/FE+EWrv4=</t:CombinedHash></t:Authenticator></t:RequestSecurityTokenResponse></t:RequestSecurityTokenResponseCollection></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813055269</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.1484359Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.1484359-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_4">http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT</a:Action><a:MessageID u:Id="_5">urn:uuid:be8ce278-d4df-4379-8347-1d4b8d60864e</a:MessageID><a:ReplyTo u:Id="_6"><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1" u:Id="_7">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-5"><u:Created>2006-06-15T15:09:43.138Z</u:Created><u:Expires>2006-06-15T15:14:43.138Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-1" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:4243e84f-ee75-441c-803d-a66cca9b8389</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="_0" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-1"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><c:DerivedKeyToken u:Id="_1" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-1"></o:Reference></o:SecurityTokenReference><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><e:ReferenceList xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:DataReference URI="#_3"></e:DataReference></e:ReferenceList><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>tRzMmEAIj9mTF5jE3xK0mgZ0gKo=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>iUJaKOpE0muECa03PrpIX30ltdc=</DigestValue></Reference><Reference URI="#_5"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>joxqL7EHLyDUnJ9ej2xdjreMQNY=</DigestValue></Reference><Reference URI="#_6"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>CuNmjfm/U6y2+ZScFHyVRRpkyKQ=</DigestValue></Reference><Reference URI="#_7"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>OUzs7EGgam0s0YWI2gmW23vl/jA=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-5"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>kZb/irmESIAkSO5gtGB36NzFl6o=</DigestValue></Reference></SignedInfo><SignatureValue>jGqqDCH9Jh1y45z/h4uf6Lq1Avw=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference URI="#_0"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body><e:EncryptedData Id="_3" Type="http://www.w3.org/2001/04/xmlenc#Content" xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes256-cbc"></e:EncryptionMethod><KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#"><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference URI="#_1"></o:Reference></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>+dZELLuym2X0HXBzpNQ/L+wHGQ3hkaDYh53OWO/oB8ve8hLZOdAzRNLGQuKRiu/iI1LXU20Rfe5stayyvQqFrg9tw8pWwg/e1a5AjnFuBaPqJMJheEop+9bK4bmLje54pHrGU1Vid7eXYEdWh3/b2xjJpOLCSKoYdIoxkLku5G951aL0/JIFol/7QUX16t+b4oXvNwhIalNB5wqsGooN4x3RQoUIuDeWhO65PPK1kCy32qexOzalaW3Nm4zvg3yY6Jgl8Gxnfd9pfmP47DpXqj6HUOuG5ifpNET69ge4dDvEAog8CpIThZph2dyrF99rUt2bw0nz9Torv2MiwxttBbOz/gcotIx/rPjhFbWNT/UzeGgPvwWadjnjSWM7cO4+5HjHF+Bjk9OOHZ6SoTT9FvXiIFksS9rBiNyhpA9uLoee0Bz6TZiZ18rv8gO3Zl3k46akybhPna/1bJxLDKUNVzD+EExokYx2SwPI0MfJOUkdtOygjitl5gBAHDL79OwVHqYEkIEHNMv9NhjF+1oBE5q/k/bDBIDQGof5jOEa3Ny8P6JZ+fKcHrbMDPViQi7fr3EWFgs6VQXIKWirUkssUcJWc9qep/2JG3IsqPia68TY2Z95KmbvonwHc64Z+unL6/YylNeuJi1O5u9W1uyIPhQnxkVczO01O+52B6eSaGGVGs0rZ5NlJMIDUy4EC9hcshnfnrh/KRhHu0ZFv8naotOc+YPNKzruv6HN5fjJ6WLh3ZCFkBV9mJ9b0zMPZe+ElT6oX5sZffOMD2CQEN12VpcuBwJ+uTEekXZUFrGxb5k=</e:CipherValue></e:CipherData></e:EncryptedData></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813119470</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.1684915Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.1684915-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_4">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT</a:Action><a:RelatesTo u:Id="_5">urn:uuid:be8ce278-d4df-4379-8347-1d4b8d60864e</a:RelatesTo><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-4"><u:Created>2006-06-15T15:09:43.168Z</u:Created><u:Expires>2006-06-15T15:14:43.168Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="_0" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:4243e84f-ee75-441c-803d-a66cca9b8389" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><c:DerivedKeyToken u:Id="_1" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:4243e84f-ee75-441c-803d-a66cca9b8389" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><e:ReferenceList xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:DataReference URI="#_3"></e:DataReference></e:ReferenceList><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>KgPlsJXFSYAdZ+XH8FeaYlYAgQg=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>QTczwetKuk9Jf4Y+fTE6AQPGsOY=</DigestValue></Reference><Reference URI="#_5"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>peCxeEsOBjOuRGCc/jl+99CGyDA=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>SvEoRZNq6BVacMNfROZF8nA4iNA=</DigestValue></Reference></SignedInfo><SignatureValue>pH8lhfLM0XtWpynGj4ZNuG3fJ2c=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference URI="#_0"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_2"><e:EncryptedData Id="_3" Type="http://www.w3.org/2001/04/xmlenc#Content" xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes256-cbc"></e:EncryptionMethod><KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#"><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference URI="#_1"></o:Reference></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>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</e:CipherValue></e:CipherData></e:EncryptedData></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813178098</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.SecurityChannelListener`1.SecurityRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.SecurityChannelListener`1.ReceiveItemAndVerifySecurityAsyncResult`2.InnerTryReceiveCompletedCallback(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.1785193Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.1785193-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_1">http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequence</a:Action><a:MessageID u:Id="_2">urn:uuid:677fd7c5-59d8-4dd9-9b3d-0c6a26b4931e</a:MessageID><a:To s:mustUnderstand="1" u:Id="_3">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-9"><u:Created>2006-06-15T15:09:43.168Z</u:Created><u:Expires>2006-06-15T15:14:43.168Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>ybfRTy0jjAtk0MgxvbZiKr4zpfQ=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>IHDAWjOKa6uAZz0AwPaXuB6da3E=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>Dxj6hU32gEGGt0YoT8zjilEhmjk=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>5N/KGEoFd5sDmxLIvm91TosuJIY=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-9"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>cXsjt/iQk2A2wgF/umQh2vAH/PQ=</DigestValue></Reference></SignedInfo><SignatureValue>vOcG9nQq1t/raIEtZPuTdMQSgBc=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body><CreateSequence xmlns="http://schemas.xmlsoap.org/ws/2005/02/rm"><AcksTo><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></AcksTo><Offer><Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</Identifier></Offer><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference></CreateSequence></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813219921</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.1885471Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.1885471-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_1">http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequenceResponse</a:Action><a:RelatesTo u:Id="_2">urn:uuid:677fd7c5-59d8-4dd9-9b3d-0c6a26b4931e</a:RelatesTo><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-7"><u:Created>2006-06-15T15:09:43.188Z</u:Created><u:Expires>2006-06-15T15:14:43.188Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>u6aajp/eJm/bQ2plAM+Kj++ccaI=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>kE6w0FsFJ6pMk96XxoIakxF8b+k=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>g1Eg0RoB2uodBk9XDh+uTHT6gSk=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-7"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>+/L7RnBAGE9SknVLesD7RsD+dvQ=</DigestValue></Reference></SignedInfo><SignatureValue>YmRgsovjA6azxrI4Q/qm7SlNQgo=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_0"><CreateSequenceResponse xmlns="http://schemas.xmlsoap.org/ws/2005/02/rm"><Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</Identifier><Accept><AcksTo><a:Address>http://localhost:8080/FileService</a:Address></AcksTo></Accept></CreateSequenceResponse></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813270226</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.SecuritySessionRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.RequestRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessRequest(IRequestContext context, WsrmMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplyListenerOverReplySession.ProcessSequencedItem(IReplySessionChannel channel, IRequestContext context, ReliableReplySessionChannel reliableChannel, WsrmMessageInfo info, Boolean newChannel)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableListenerOverSession`5.HandleReceiveComplete(TItem item, TInnerChannel channel)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableListenerOverSession`5.AsyncHandleReceiveComplete(Object state)&#xD;&#xA;   at System.ServiceModel.Channels.IOThreadScheduler.WorkItem.Invoke()&#xD;&#xA;   at System.ServiceModel.Channels.IOThreadScheduler.ProcessCallbacks()&#xD;&#xA;   at System.ServiceModel.Channels.IOThreadScheduler.CompletionCallback(Object state)&#xD;&#xA;   at System.ServiceModel.Channels.IOThreadScheduler.ScheduledOverlapped.IOCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.ServiceModel.Channels.IOThreadScheduler.ScheduledOverlapped.IOCallbackStub(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2186305Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2086027-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:Sequence s:mustUnderstand="1" u:Id="_2"><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier><r:MessageNumber>1</r:MessageNumber></r:Sequence><a:Action s:mustUnderstand="1" u:Id="_3">http://tempuri.org/IFileService/GetFile</a:Action><a:MessageID u:Id="_4">urn:uuid:ab194523-4b69-462e-8d26-b574e83abcf0</a:MessageID><a:ReplyTo u:Id="_5"><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1" u:Id="_6">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-10"><u:Created>2006-06-15T15:09:43.208Z</u:Created><u:Expires>2006-06-15T15:14:43.208Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-8" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><e:ReferenceList xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:DataReference URI="#_1"></e:DataReference></e:ReferenceList><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>KJtWsBEVzFqNvmHW5qFOrspbvrA=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>sD5X/NZ37rPFwU1tavp9puilu/I=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>/sDIGlW+aablfm5f+fsU5ANFGW8=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>VQaJyW6I89vQ2MDpnBYbjW1TgM8=</DigestValue></Reference><Reference URI="#_5"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>k69pykploFPkXhw5ogDHcjcJUI0=</DigestValue></Reference><Reference URI="#_6"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>k9uD5/ISnOO4YM7XEmx501B/2uM=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-10"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>5rOg3wKRYXVxzdcw51wI83Rx8pA=</DigestValue></Reference></SignedInfo><SignatureValue>qf583+w8mbxsysSUkbKnr6DkORo=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body><e:EncryptedData Id="_1" Type="http://www.w3.org/2001/04/xmlenc#Content" xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes256-cbc"></e:EncryptionMethod><KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#"><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-8"></o:Reference></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>Gc0fSdE4Y7PCextaMzaZNlkJ0eZp+UCcZoIgoNrswnX42KjSu0mk0vgV1JRwDCnOVW40HfUfDVbzXxGCyl/xgPeIDJl90DnHWl8ijjVLUB93ZDw1EgaH46oaQiVvkzLEVZljv6GpQkLASEFDRuuJfQ==</e:CipherValue></e:CipherData></e:EncryptedData></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813348361</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2286583Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2286583-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:Sequence s:mustUnderstand="1" u:Id="_2"><r:Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</r:Identifier><r:MessageNumber>1</r:MessageNumber></r:Sequence><r:SequenceAcknowledgement u:Id="_3"><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier><r:AcknowledgementRange Lower="1" Upper="1"></r:AcknowledgementRange><netrm:BufferRemaining xmlns:netrm="http://schemas.microsoft.com/net/2005/02/rm">32</netrm:BufferRemaining></r:SequenceAcknowledgement><a:Action s:mustUnderstand="1" u:Id="_4">http://tempuri.org/IFileService/GetFileResponse</a:Action><a:RelatesTo u:Id="_5">urn:uuid:ab194523-4b69-462e-8d26-b574e83abcf0</a:RelatesTo><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-8"><u:Created>2006-06-15T15:09:43.228Z</u:Created><u:Expires>2006-06-15T15:14:43.228Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-6" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><e:ReferenceList xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:DataReference URI="#_1"></e:DataReference></e:ReferenceList><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>qWZ8QNUBp1mPExr7mmavMHxCMl8=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>Ri/dBSJi9P84sqKpIqd6WMUkwNQ=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>IcOaliPZad0H5Cdt7uH2o78R2ns=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>rQz2LW16uy2FkWk8M21wxoocWn4=</DigestValue></Reference><Reference URI="#_5"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>P5jPYLtn5WjPHY99HcDxwrv/Afw=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-8"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>iPxeQN9ljcQe4uQ0w3cWmYvtVgA=</DigestValue></Reference></SignedInfo><SignatureValue>ruZOE5I5wgXKB/S/WzzQNoiul/w=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_0"><e:EncryptedData Id="_1" Type="http://www.w3.org/2001/04/xmlenc#Content" xmlns:e="http://www.w3.org/2001/04/xmlenc#"><e:EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes256-cbc"></e:EncryptionMethod><KeyInfo xmlns="http://www.w3.org/2000/09/xmldsig#"><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-6"></o:Reference></o:SecurityTokenReference></KeyInfo><e:CipherData><e:CipherValue>2klHeN3CQDL8ffFgGlfK2K5BRunYF/JgQF2SmUq1zDG/mwSvQDWmH5J65VV9k176YtEy1iB6OsTYbxX0xRtW6HF55ADllrbN9Z7wfCEiEgujfMpTbRo0LVxiaByfD3IvmUHS76QdKNk4lpD9JxTCBtXsJqpkA3c2YouueMmmQ+kWBDwsp0PIvMlBoorTQCuG/GY6UPKNuEqfJxww9JWWK7SDQa0bGngShkM0snOz0YT9ZCPTMeMXwCLzqNpnDgcnKm3f4rx4LI8frdCfEkGSo878EJcKMsVmAC4sQnzXeQ0tPsZ+W8Kb/ietGNQYxHVgmQiOdzEAoAXk/iJnmqfQ93Xp48ExcsgrwJn8vixeitJ9oFXmnCJjHcTVPI5f9ZsfeVbvsjY0cziXOJ0JBG8CXNSMMmu76cuJFA0QlVH0HzCXm/281Etn9tzU9EoJRS5tgZaxq1DlXO/o3obyVTwMayfHW6m0BvlykB0WItI7tQy0uGsOILUsBZzFBiVpgNEfClIMrFvgmA0qiIJ6X7xSXXzEhF61+EcYsZnchGNjEoovdYKGSC9SnoXDMsykQlZ70QCnJFPpzLAc7N3cX82yC/sfvaOGxJqi47yQRv7ZAkVvLf82347nqe326qgHEITHShtPqs9KYFcmXq+gr+p/VgJr/Y2xP9tze/zeqvXdVjH9wMgABvxO+rN9KgL7dgTXt2l3ecRc/xV0a6CQHoqpzSVs4EOsGyLnAJ5hvcUZZfgmJZ/8CYlZtAxZdU+cROmV5Mw3gVsYvAzZ4VMZK96zXSvYiONgRWDcGIOPRn652/SXIyqryimhL2mMHEShLQ4wxanTXxui6Jiu+WQKFYVlu4dAp4skVl0rd8lWpYHj9FtMh5bJHAE2PUNEUfQbmeImUrWtnd0lXVyxXaNyIxjM8izcghP5H/CfIHlodvgrJuVqrBa2/+dICWRHjCoIKO5VPvlPmTDOrNNj+iMdMf0Xrw==</e:CipherValue></e:CipherData></e:EncryptedData></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813406214</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.SecuritySessionRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.RequestRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.SendReply(IRequestContext context, MaskingMode maskingMode, TimeoutHelper&amp; timeoutHelper)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.SendReply(IRequestContext context, MaskingMode maskingMode)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.OnReply(Message reply, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramAdapter.ReplyDatagramAdapterListener.Enqueue(IRequestContext request, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramAdapter.DatagramAdapterListenerBase`3.DatagramAdapterReceiver.FinishReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramAdapter.DatagramAdapterListenerBase`3.DatagramAdapterReceiver.ReceiveCallback(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramAdapter.DatagramAdapterListenerBase`3.DatagramAdapterReceiver.ReceiveCallbackStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessSequencedMessage(IRequestContext context, WsrmSequencedMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessRequest(IRequestContext context, WsrmMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.HandleReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.OnReceiveCompletedStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ReceiveRequestAsyncResult.OnReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2487139Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2487139-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:SequenceAcknowledgement u:Id="_1"><r:Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</r:Identifier><r:AcknowledgementRange Lower="1" Upper="1"></r:AcknowledgementRange></r:SequenceAcknowledgement><r:Sequence s:mustUnderstand="1" u:Id="_2"><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier><r:MessageNumber>2</r:MessageNumber><r:LastMessage></r:LastMessage></r:Sequence><a:Action s:mustUnderstand="1" u:Id="_3">http://schemas.xmlsoap.org/ws/2005/02/rm/LastMessage</a:Action><a:To s:mustUnderstand="1" u:Id="_4">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-11"><u:Created>2006-06-15T15:09:43.238Z</u:Created><u:Expires>2006-06-15T15:14:43.238Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>3gVmAaye1xmL7Y+rC2iGKxAsT6w=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>j+TmSbGC/xQzHZck7hYkAvyJUfY=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>MaDY8f1Gt6NDlOjpXC6O+h8yrHQ=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>fC4H478ZsiD6dheirOiLCe31Y1s=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>bV0IM1F7SmitWspWOdNFOfESSxU=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-11"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>S0drTyoFw+9MobJ/5rPB5OkhEFs=</DigestValue></Reference></SignedInfo><SignatureValue>KTGEjLSH2IjJqPjdLAideG6MpXU=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813473211</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2587417Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2587417-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:Sequence s:mustUnderstand="1" u:Id="_1"><r:Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</r:Identifier><r:MessageNumber>2</r:MessageNumber><r:LastMessage></r:LastMessage></r:Sequence><r:SequenceAcknowledgement u:Id="_2"><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier><r:AcknowledgementRange Lower="1" Upper="2"></r:AcknowledgementRange><netrm:BufferRemaining xmlns:netrm="http://schemas.microsoft.com/net/2005/02/rm">32</netrm:BufferRemaining></r:SequenceAcknowledgement><a:Action s:mustUnderstand="1" u:Id="_3">http://schemas.xmlsoap.org/ws/2005/02/rm/LastMessage</a:Action><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-9"><u:Created>2006-06-15T15:09:43.258Z</u:Created><u:Expires>2006-06-15T15:14:43.258Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>3gVmAaye1xmL7Y+rC2iGKxAsT6w=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>IjCRKvuR68As8gqYfondx8GHc1s=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>2gYM79zpg7W/Wgr3tLIvFvHzw2A=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>fC4H478ZsiD6dheirOiLCe31Y1s=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-9"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>zyY5F9Bp0fIa4FTW7UycYOIYWXQ=</DigestValue></Reference></SignedInfo><SignatureValue>peiPDv6i1g24RHmjB64mZx8GI2E=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_0"></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813500525</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.SecuritySessionRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.RequestRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.SendReply(IRequestContext context, MaskingMode maskingMode, TimeoutHelper&amp; timeoutHelper)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.SendReply(IRequestContext context, MaskingMode maskingMode)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ReliableRequestContext.InnerClose()&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessSequencedMessage(IRequestContext context, WsrmSequencedMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessRequest(IRequestContext context, WsrmMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.HandleReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.OnReceiveCompletedStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ReceiveRequestAsyncResult.OnReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2587417Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2587417-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:SequenceAcknowledgement u:Id="_1"><r:Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</r:Identifier><r:AcknowledgementRange Lower="1" Upper="2"></r:AcknowledgementRange></r:SequenceAcknowledgement><a:Action s:mustUnderstand="1" u:Id="_2">http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence</a:Action><a:To s:mustUnderstand="1" u:Id="_3">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-12"><u:Created>2006-06-15T15:09:43.258Z</u:Created><u:Expires>2006-06-15T15:14:43.258Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>iDm/6sQnspOYPA0nvQNdbKwvTWY=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>dsonoXBgeXAbCPTYztBTN1OGkOE=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>c+/4W4WgzA23xuCzbu1havqSl9o=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>5N/KGEoFd5sDmxLIvm91TosuJIY=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-12"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>AADRVlc/2fq+gvDJGJbAhMMUfvU=</DigestValue></Reference></SignedInfo><SignatureValue>fj7E/30rU5YTwDvz/xTX/UAJNaw=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body><r:TerminateSequence><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier></r:TerminateSequence></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813520850</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2687695Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2687695-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:r="http://schemas.xmlsoap.org/ws/2005/02/rm" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><r:SequenceAcknowledgement u:Id="_1"><r:Identifier>urn:uuid:82f5c92a-6beb-412f-8123-6324c360d6d1</r:Identifier><r:AcknowledgementRange Lower="1" Upper="2"></r:AcknowledgementRange><netrm:BufferRemaining xmlns:netrm="http://schemas.microsoft.com/net/2005/02/rm">32</netrm:BufferRemaining></r:SequenceAcknowledgement><a:Action s:mustUnderstand="1" u:Id="_2">http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence</a:Action><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-10"><u:Created>2006-06-15T15:09:43.268Z</u:Created><u:Expires>2006-06-15T15:14:43.268Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>70l5c+GNXJto1qtJ+9hXjxTeuEY=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>cn2eBfNmfZcY82Z1Ic/scUo3UGQ=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>c+/4W4WgzA23xuCzbu1havqSl9o=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-10"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>5ubeAhVb7/BeLFtcsZGRHvanTD0=</DigestValue></Reference></SignedInfo><SignatureValue>5vaZRtfcRf6d/kyLbXd8G6KM+dc=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_0"><r:TerminateSequence><r:Identifier>urn:uuid:2165856b-97c3-4a22-83d5-9f08881e4a3c</r:Identifier></r:TerminateSequence></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813530202</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.SecuritySessionRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.RequestRequestContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessTerminateSequence(IRequestContext context)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.ProcessRequest(IRequestContext context, WsrmMessageInfo info)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.HandleReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableReplySessionChannel.OnReceiveCompletedStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ReceiveRequestAsyncResult.OnReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.Dispatch()&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.DispatchItems()&#xD;&#xA;   at System.ServiceModel.Channels.ReplyChannelDemuxer.Dispatch(IChannelListener listener)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.ProcessItem(TInnerItem item)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.HandleReceiveResult(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.DatagramChannelDemuxer`2.OnReceiveCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2687695Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2687695-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_1">http://schemas.xmlsoap.org/ws/2005/02/trust/RST/SCT/Cancel</a:Action><a:MessageID u:Id="_2">urn:uuid:b24f134c-2463-426b-a2bc-d321109ea1c7</a:MessageID><a:ReplyTo u:Id="_3"><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1" u:Id="_4">http://localhost:8080/FileService</a:To><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-13"><u:Created>2006-06-15T15:09:43.268Z</u:Created><u:Expires>2006-06-15T15:14:43.268Z</u:Expires></u:Timestamp><c:SecurityContextToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><c:Identifier>urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38</c:Identifier></c:SecurityContextToken><c:DerivedKeyToken u:Id="uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-2"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>CDUQUeGjvaqYs7n8p0B2E3rQ1zY=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>GA0icwQsAzfUOq7Gy1Cg8CTTk6o=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>O0JJEh+vjjrO1MdwGaIt2JlSm04=</DigestValue></Reference><Reference URI="#_3"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>o3ibE52LCPwycD7dwAsKtJa+WMw=</DigestValue></Reference><Reference URI="#_4"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>bV0IM1F7SmitWspWOdNFOfESSxU=</DigestValue></Reference><Reference URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-13"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>SPaEaY6BFiOWXnJh6oA3yH1/6ek=</DigestValue></Reference></SignedInfo><SignatureValue>8tgxa3IZKWC4AczzSoOwgFiKzv8=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-ba5c1145-2ddb-4859-8682-8d44047e5697-7"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body><t:RequestSecurityToken xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust"><t:RequestType>http://schemas.xmlsoap.org/ws/2005/02/trust/Cancel</t:RequestType><t:CancelTarget><o:SecurityTokenReference xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference></t:CancelTarget></t:RequestSecurityToken></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813549074</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager, String contentType)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:09:43.2687695Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost.vshost" ProcessID="4284" ThreadID="12" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:09:43.2687695-04:00" Source="TransportSend" Type="System.ServiceModel.Security.SecurityAppliedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:u="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"><s:Header><a:Action s:mustUnderstand="1" u:Id="_1">http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/SCT/Cancel</a:Action><a:RelatesTo u:Id="_2">urn:uuid:b24f134c-2463-426b-a2bc-d321109ea1c7</a:RelatesTo><o:Security s:mustUnderstand="1" xmlns:o="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"><u:Timestamp u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-11"><u:Created>2006-06-15T15:09:43.268Z</u:Created><u:Expires>2006-06-15T15:14:43.268Z</u:Expires></u:Timestamp><c:DerivedKeyToken u:Id="uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5" xmlns:c="http://schemas.xmlsoap.org/ws/2005/02/sc"><o:SecurityTokenReference><o:Reference URI="urn:uuid:49b11cd4-4e68-4d9c-8231-c2460c6bde38" ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/sct"></o:Reference></o:SecurityTokenReference><c:Offset>0</c:Offset><c:Length>24</c:Length><c:Nonce><!--Removed--></c:Nonce></c:DerivedKeyToken><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></CanonicalizationMethod><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#hmac-sha1"></SignatureMethod><Reference URI="#_0"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>BXF6YVgC7GaFcATWlFL6EsPDNMk=</DigestValue></Reference><Reference URI="#_1"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>Co+CdLM6yrXJYKmiLC3jm2Mbk1E=</DigestValue></Reference><Reference URI="#_2"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>mDiRhnQV6KB02ztJgWrbfdXSJ3w=</DigestValue></Reference><Reference URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-11"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"></Transform></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"></DigestMethod><DigestValue>jVU2DwBDizqT+jMS/aJ8cNmTKAc=</DigestValue></Reference></SignedInfo><SignatureValue>kJmwjr9V2UO+0/4JbAN0waxWyZk=</SignatureValue><KeyInfo><o:SecurityTokenReference><o:Reference ValueType="http://schemas.xmlsoap.org/ws/2005/02/sc/dk" URI="#uuid-bc036fdd-2f03-463f-8f2b-27ad3707ea01-5"></o:Reference></o:SecurityTokenReference></KeyInfo></Signature></o:Security></s:Header><s:Body u:Id="_0"><t:RequestSecurityTokenResponse xmlns:t="http://schemas.xmlsoap.org/ws/2005/02/trust"><t:RequestedTokenCancelled></t:RequestedTokenCancelled></t:RequestSecurityTokenResponse></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1118813558170</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String startInfo, String boundary, String startUri, Boolean writeMessageHeaders)&#xD;&#xA;   at System.ServiceModel.Channels.MtomMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset, String boundary)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.SendResponse(IRequestContext requestContext, Message response, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.SendCloseResponse(IRequestContext requestContext, Message message, SecurityProtocolCorrelationState correlationState, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySimplexSessionChannel.CheckForShutdown(IRequestContext requestContext, Message message, SecurityProtocolCorrelationState correlationState, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySimplexSessionChannel.OnCloseMessageReceived(IRequestContext requestContext, Message message, SecurityProtocolCorrelationState correlationState, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ProcessRequestContext(IRequestContext requestContext, TimeSpan timeout, SecurityProtocolCorrelationState&amp; correlationState, Boolean&amp; isSecurityProcessingFailure)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ReceiveRequestAsyncResult.CompleteReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Security.SecuritySessionServerSettings.ServerSecuritySessionChannel.ReceiveRequestAsyncResult.OnReceive(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.ReliableChannelBinder`1.InputAsyncResult`1.OnInputCompleteStatic(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility<E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:44.7181379Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:44.7181379-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.BufferedMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2004/09/transfer/Get</a:Action><a:MessageID>urn:uuid:372e1ec7-97dd-4dc7-89bf-9a3771951a4f</a:MessageID><a:ReplyTo><a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address></a:ReplyTo><a:To s:mustUnderstand="1">http://localhost:8080/FileService/mex</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119676686925</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.ReadMessage(ArraySegment`1 buffer, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.DecodeBufferedMessage(ArraySegment`1 buffer, Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ReadBufferedMessage(Stream inputStream)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.4601951Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.4601951-04:00" Source="TransportSend" Type="System.ServiceModel.Channels.BodyWriterMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing"><s:Header><a:Action s:mustUnderstand="1">http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse</a:Action><a:RelatesTo>urn:uuid:372e1ec7-97dd-4dc7-89bf-9a3771951a4f</a:RelatesTo></s:Header><s:Body><Metadata xmlns="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex"><wsx:MetadataSection Dialect="http://schemas.xmlsoap.org/wsdl/" Identifier="http://tempuri.org/" xmlns=""><wsdl:definitions name="FileService" targetNamespace="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://tempuri.org/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/09/policy/addressing" xmlns:wsap10="http://www.w3.org/2005/08/addressing" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><wsp:Policy wsu:Id="WSHttpBinding_IFileService_policy"><wsp:ExactlyOne><wsp:All><wsrm:RMAssertion xmlns:wsrm="http://schemas.xmlsoap.org/ws/2005/02/rm/policy"><wsrm:InactivityTimeout Milliseconds="300000"></wsrm:InactivityTimeout><wsrm:AcknowledgementInterval Milliseconds="200"></wsrm:AcknowledgementInterval></wsrm:RMAssertion><net:RmFlowControl xmlns:net="http://schemas.microsoft.com/net/2005/02/rm/policy"><net:MaxReceiveBufferSize>32</net:MaxReceiveBufferSize></net:RmFlowControl><sp:SymmetricBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:ProtectionToken><wsp:Policy><sp:SecureConversationToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"><wsp:Policy><sp:RequireDerivedKeys></sp:RequireDerivedKeys><sp:BootstrapPolicy><wsp:Policy><sp:SymmetricBinding><wsp:Policy><sp:ProtectionToken><wsp:Policy><sp:SpnegoContextToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"><wsp:Policy><sp:RequireDerivedKeys></sp:RequireDerivedKeys></wsp:Policy></sp:SpnegoContextToken></wsp:Policy></sp:ProtectionToken><sp:AlgorithmSuite><wsp:Policy><sp:Basic256></sp:Basic256></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict></sp:Strict></wsp:Policy></sp:Layout><sp:IncludeTimestamp></sp:IncludeTimestamp><sp:OnlySignEntireHeadersAndBody></sp:OnlySignEntireHeadersAndBody></wsp:Policy></sp:SymmetricBinding><sp:Wss11><wsp:Policy><sp:MustSupportRefKeyIdentifier></sp:MustSupportRefKeyIdentifier><sp:MustSupportRefIssuerSerial></sp:MustSupportRefIssuerSerial><sp:MustSupportRefThumbprint></sp:MustSupportRefThumbprint><sp:MustSupportRefEncryptedKey></sp:MustSupportRefEncryptedKey></wsp:Policy></sp:Wss11><sp:Trust10><wsp:Policy><sp:MustSupportIssuedTokens></sp:MustSupportIssuedTokens><sp:RequireClientEntropy></sp:RequireClientEntropy><sp:RequireServerEntropy></sp:RequireServerEntropy></wsp:Policy></sp:Trust10></wsp:Policy></sp:BootstrapPolicy></wsp:Policy></sp:SecureConversationToken></wsp:Policy></sp:ProtectionToken><sp:AlgorithmSuite><wsp:Policy><sp:Basic256></sp:Basic256></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict></sp:Strict></wsp:Policy></sp:Layout><sp:IncludeTimestamp></sp:IncludeTimestamp><sp:OnlySignEntireHeadersAndBody></sp:OnlySignEntireHeadersAndBody></wsp:Policy></sp:SymmetricBinding><sp:Wss11 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:MustSupportRefKeyIdentifier></sp:MustSupportRefKeyIdentifier><sp:MustSupportRefIssuerSerial></sp:MustSupportRefIssuerSerial><sp:MustSupportRefThumbprint></sp:MustSupportRefThumbprint><sp:MustSupportRefEncryptedKey></sp:MustSupportRefEncryptedKey></wsp:Policy></sp:Wss11><sp:Trust10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:MustSupportIssuedTokens></sp:MustSupportIssuedTokens><sp:RequireClientEntropy></sp:RequireClientEntropy><sp:RequireServerEntropy></sp:RequireServerEntropy></wsp:Policy></sp:Trust10><wsoma:OptimizedMimeSerialization xmlns:wsoma="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization"></wsoma:OptimizedMimeSerialization><wspe:Utf816FFFECharacterEncoding xmlns:wspe="http://schemas.xmlsoap.org/ws/2004/09/policy/encoding"></wspe:Utf816FFFECharacterEncoding><wsap10:UsingAddressing></wsap10:UsingAddressing></wsp:All></wsp:ExactlyOne></wsp:Policy><wsp:Policy wsu:Id="WSHttpBinding_IFileService_GetFile_Input_policy"><wsp:ExactlyOne><wsp:All><sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body><sp:Header Name="Sequence" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="SequenceAcknowledgement" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="AckRequested" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="To" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="From" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="FaultTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="ReplyTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="MessageID" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="RelatesTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="Action" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header></sp:SignedParts><sp:EncryptedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body></sp:EncryptedParts></wsp:All></wsp:ExactlyOne></wsp:Policy><wsp:Policy wsu:Id="WSHttpBinding_IFileService_GetFile_output_policy"><wsp:ExactlyOne><wsp:All><sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body><sp:Header Name="Sequence" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="SequenceAcknowledgement" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="AckRequested" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="To" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="From" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="FaultTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="ReplyTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="MessageID" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="RelatesTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="Action" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header></sp:SignedParts><sp:EncryptedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body></sp:EncryptedParts></wsp:All></wsp:ExactlyOne></wsp:Policy><wsdl:types><xsd:schema targetNamespace="http://tempuri.org/Imports"><xsd:import namespace="http://tempuri.org/"></xsd:import><xsd:import namespace="http://schemas.microsoft.com/2003/10/Serialization/"></xsd:import></xsd:schema></wsdl:types><wsdl:message name="IFileService_GetFile_InputMessage"><wsdl:part name="parameters" element="tns:GetFile"></wsdl:part></wsdl:message><wsdl:message name="IFileService_GetFile_OutputMessage"><wsdl:part name="parameters" element="tns:GetFileResponse"></wsdl:part></wsdl:message><wsdl:portType msc:usingSession="false" name="IFileService"><wsdl:operation name="GetFile"><wsdl:input wsa10:Action="http://tempuri.org/IFileService/GetFile" message="tns:IFileService_GetFile_InputMessage"></wsdl:input><wsdl:output wsa10:Action="http://tempuri.org/IFileService/GetFileResponse" message="tns:IFileService_GetFile_OutputMessage"></wsdl:output></wsdl:operation></wsdl:portType><wsdl:binding name="WSHttpBinding_IFileService" type="tns:IFileService"><wsp:PolicyReference URI="#WSHttpBinding_IFileService_policy"></wsp:PolicyReference><soap12:binding transport="http://schemas.xmlsoap.org/soap/http"></soap12:binding><wsdl:operation name="GetFile"><soap12:operation soapAction="http://tempuri.org/IFileService/GetFile" style="document"></soap12:operation><wsdl:input><wsp:PolicyReference URI="#WSHttpBinding_IFileService_GetFile_Input_policy"></wsp:PolicyReference><soap12:body use="literal"></soap12:body></wsdl:input><wsdl:output><wsp:PolicyReference URI="#WSHttpBinding_IFileService_GetFile_output_policy"></wsp:PolicyReference><soap12:body use="literal"></soap12:body></wsdl:output></wsdl:operation></wsdl:binding><wsdl:service name="FileService"><wsdl:port name="WSHttpBinding_IFileService" binding="tns:WSHttpBinding_IFileService"><soap12:address location="http://localhost:8080/FileService"></soap12:address><wsa10:EndpointReference><wsa10:Address>http://localhost:8080/FileService</wsa10:Address><Identity xmlns="http://schemas.microsoft.com/ws/2004/04/addressingidentityextension"><Upn>shawnc@corp.avanade.org</Upn></Identity></wsa10:EndpointReference></wsdl:port></wsdl:service></wsdl:definitions></wsx:MetadataSection><wsx:MetadataSection Dialect="http://www.w3.org/2001/XMLSchema" Identifier="http://tempuri.org/" xmlns=""><xs:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://tempuri.org/"><xs:element name="GetFile"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="GetFileResponse"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="GetFileResult" nillable="true" type="xs:base64Binary"></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema></wsx:MetadataSection><wsx:MetadataSection Dialect="http://www.w3.org/2001/XMLSchema" Identifier="http://schemas.microsoft.com/2003/10/Serialization/" xmlns=""><xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/"><xs:element name="anyType" nillable="true" type="xs:anyType"></xs:element><xs:element name="anyURI" nillable="true" type="xs:anyURI"></xs:element><xs:element name="base64Binary" nillable="true" type="xs:base64Binary"></xs:element><xs:element name="boolean" nillable="true" type="xs:boolean"></xs:element><xs:element name="byte" nillable="true" type="xs:byte"></xs:element><xs:element name="dateTime" nillable="true" type="xs:dateTime"></xs:element><xs:element name="decimal" nillable="true" type="xs:decimal"></xs:element><xs:element name="double" nillable="true" type="xs:double"></xs:element><xs:element name="float" nillable="true" type="xs:float"></xs:element><xs:element name="int" nillable="true" type="xs:int"></xs:element><xs:element name="long" nillable="true" type="xs:long"></xs:element><xs:element name="QName" nillable="true" type="xs:QName"></xs:element><xs:element name="short" nillable="true" type="xs:short"></xs:element><xs:element name="string" nillable="true" type="xs:string"></xs:element><xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"></xs:element><xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"></xs:element><xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"></xs:element><xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"></xs:element><xs:element name="char" nillable="true" type="tns:char"></xs:element><xs:simpleType name="char"><xs:restriction base="xs:int"></xs:restriction></xs:simpleType><xs:element name="duration" nillable="true" type="tns:duration"></xs:element><xs:simpleType name="duration"><xs:restriction base="xs:duration"><xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"></xs:pattern><xs:minInclusive value="-P10675199DT2H48M5.4775808S"></xs:minInclusive><xs:maxInclusive value="P10675199DT2H48M5.4775807S"></xs:maxInclusive></xs:restriction></xs:simpleType><xs:element name="guid" nillable="true" type="tns:guid"></xs:element><xs:simpleType name="guid"><xs:restriction base="xs:string"><xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"></xs:pattern></xs:restriction></xs:simpleType><xs:attribute name="FactoryType" type="xs:QName"></xs:attribute></xs:schema></wsx:MetadataSection></Metadata></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119679325836</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset)&#xD;&#xA;   at System.ServiceModel.Channels.MessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.4902785Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.4902785-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.NullMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><HttpRequest><Method>GET</Method><QueryString></QueryString><WebHeaders><Host>localhost:8080</Host></WebHeaders></HttpRequest><s:Envelope xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:s="http://www.w3.org/2003/05/soap-envelope"><s:Header><a:To s:mustUnderstand="1">http://localhost:8080/FileService</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119679412354</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ProcessHttpAddressing(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9615851Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9615851-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.NullMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><HttpRequest><Method>GET</Method><QueryString>disco</QueryString><WebHeaders><Host>localhost:8080</Host></WebHeaders></HttpRequest><s:Envelope xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:s="http://www.w3.org/2003/05/soap-envelope"><s:Header><a:To s:mustUnderstand="1">http://localhost:8080/FileService?disco</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681129477</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ProcessHttpAddressing(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9716129Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9716129-04:00" Source="TransportSend" Type="System.ServiceModel.Description.ServiceMetadataExtension+HttpGetImpl+DiscoMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><Addressing><Action></Action></Addressing><HttpResponse><StatusCode>OK</StatusCode><WebHeaders><Content-Type>text/xml; charset="UTF-8"</Content-Type></WebHeaders></HttpResponse><?xml version="1.0" encoding="utf-8"?><discovery xmlns="http://schemas.xmlsoap.org/disco/"><contractRef ref="http://localhost:8080/FileService?wsdl" docRef="http://localhost:8080/FileService" xmlns="http://schemas.xmlsoap.org/disco/scl/"></contractRef></discovery></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681133952</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset)&#xD;&#xA;   at System.ServiceModel.Channels.MessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9716129Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9716129-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.NullMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><HttpRequest><Method>GET</Method><QueryString>wsdl</QueryString><WebHeaders><Host>localhost:8080</Host></WebHeaders></HttpRequest><s:Envelope xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:s="http://www.w3.org/2003/05/soap-envelope"><s:Header><a:To s:mustUnderstand="1">http://localhost:8080/FileService?wsdl</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681142463</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ProcessHttpAddressing(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9716129Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9716129-04:00" Source="TransportSend" Type="System.ServiceModel.Description.ServiceMetadataExtension+HttpGetImpl+ServiceDescriptionMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><Addressing><Action></Action></Addressing><HttpResponse><StatusCode>OK</StatusCode><WebHeaders><Content-Type>text/xml; charset="UTF-8"</Content-Type></WebHeaders></HttpResponse><?xml version="1.0" encoding="utf-8"?><wsdl:definitions name="FileService" targetNamespace="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://tempuri.org/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/09/policy/addressing" xmlns:wsap10="http://www.w3.org/2005/08/addressing" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><wsp:Policy wsu:Id="WSHttpBinding_IFileService_policy"><wsp:ExactlyOne><wsp:All><wsrm:RMAssertion xmlns:wsrm="http://schemas.xmlsoap.org/ws/2005/02/rm/policy"><wsrm:InactivityTimeout Milliseconds="300000"></wsrm:InactivityTimeout><wsrm:AcknowledgementInterval Milliseconds="200"></wsrm:AcknowledgementInterval></wsrm:RMAssertion><net:RmFlowControl xmlns:net="http://schemas.microsoft.com/net/2005/02/rm/policy"><net:MaxReceiveBufferSize>32</net:MaxReceiveBufferSize></net:RmFlowControl><sp:SymmetricBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:ProtectionToken><wsp:Policy><sp:SecureConversationToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"><wsp:Policy><sp:RequireDerivedKeys></sp:RequireDerivedKeys><sp:BootstrapPolicy><wsp:Policy><sp:SymmetricBinding><wsp:Policy><sp:ProtectionToken><wsp:Policy><sp:SpnegoContextToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"><wsp:Policy><sp:RequireDerivedKeys></sp:RequireDerivedKeys></wsp:Policy></sp:SpnegoContextToken></wsp:Policy></sp:ProtectionToken><sp:AlgorithmSuite><wsp:Policy><sp:Basic256></sp:Basic256></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict></sp:Strict></wsp:Policy></sp:Layout><sp:IncludeTimestamp></sp:IncludeTimestamp><sp:OnlySignEntireHeadersAndBody></sp:OnlySignEntireHeadersAndBody></wsp:Policy></sp:SymmetricBinding><sp:Wss11><wsp:Policy><sp:MustSupportRefKeyIdentifier></sp:MustSupportRefKeyIdentifier><sp:MustSupportRefIssuerSerial></sp:MustSupportRefIssuerSerial><sp:MustSupportRefThumbprint></sp:MustSupportRefThumbprint><sp:MustSupportRefEncryptedKey></sp:MustSupportRefEncryptedKey></wsp:Policy></sp:Wss11><sp:Trust10><wsp:Policy><sp:MustSupportIssuedTokens></sp:MustSupportIssuedTokens><sp:RequireClientEntropy></sp:RequireClientEntropy><sp:RequireServerEntropy></sp:RequireServerEntropy></wsp:Policy></sp:Trust10></wsp:Policy></sp:BootstrapPolicy></wsp:Policy></sp:SecureConversationToken></wsp:Policy></sp:ProtectionToken><sp:AlgorithmSuite><wsp:Policy><sp:Basic256></sp:Basic256></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy><sp:Strict></sp:Strict></wsp:Policy></sp:Layout><sp:IncludeTimestamp></sp:IncludeTimestamp><sp:OnlySignEntireHeadersAndBody></sp:OnlySignEntireHeadersAndBody></wsp:Policy></sp:SymmetricBinding><sp:Wss11 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:MustSupportRefKeyIdentifier></sp:MustSupportRefKeyIdentifier><sp:MustSupportRefIssuerSerial></sp:MustSupportRefIssuerSerial><sp:MustSupportRefThumbprint></sp:MustSupportRefThumbprint><sp:MustSupportRefEncryptedKey></sp:MustSupportRefEncryptedKey></wsp:Policy></sp:Wss11><sp:Trust10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><wsp:Policy><sp:MustSupportIssuedTokens></sp:MustSupportIssuedTokens><sp:RequireClientEntropy></sp:RequireClientEntropy><sp:RequireServerEntropy></sp:RequireServerEntropy></wsp:Policy></sp:Trust10><wsoma:OptimizedMimeSerialization xmlns:wsoma="http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization"></wsoma:OptimizedMimeSerialization><wspe:Utf816FFFECharacterEncoding xmlns:wspe="http://schemas.xmlsoap.org/ws/2004/09/policy/encoding"></wspe:Utf816FFFECharacterEncoding><wsap10:UsingAddressing></wsap10:UsingAddressing></wsp:All></wsp:ExactlyOne></wsp:Policy><wsp:Policy wsu:Id="WSHttpBinding_IFileService_GetFile_Input_policy"><wsp:ExactlyOne><wsp:All><sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body><sp:Header Name="Sequence" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="SequenceAcknowledgement" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="AckRequested" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="To" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="From" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="FaultTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="ReplyTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="MessageID" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="RelatesTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="Action" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header></sp:SignedParts><sp:EncryptedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body></sp:EncryptedParts></wsp:All></wsp:ExactlyOne></wsp:Policy><wsp:Policy wsu:Id="WSHttpBinding_IFileService_GetFile_output_policy"><wsp:ExactlyOne><wsp:All><sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body><sp:Header Name="Sequence" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="SequenceAcknowledgement" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="AckRequested" Namespace="http://schemas.xmlsoap.org/ws/2005/02/rm"></sp:Header><sp:Header Name="To" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="From" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="FaultTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="ReplyTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="MessageID" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="RelatesTo" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header><sp:Header Name="Action" Namespace="http://www.w3.org/2005/08/addressing"></sp:Header></sp:SignedParts><sp:EncryptedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"><sp:Body></sp:Body></sp:EncryptedParts></wsp:All></wsp:ExactlyOne></wsp:Policy><wsdl:types><xsd:schema targetNamespace="http://tempuri.org/Imports"><xsd:import schemaLocation="http://localhost:8080/FileService?xsd=xsd0" namespace="http://tempuri.org/"></xsd:import><xsd:import schemaLocation="http://localhost:8080/FileService?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/"></xsd:import></xsd:schema></wsdl:types><wsdl:message name="IFileService_GetFile_InputMessage"><wsdl:part name="parameters" element="tns:GetFile"></wsdl:part></wsdl:message><wsdl:message name="IFileService_GetFile_OutputMessage"><wsdl:part name="parameters" element="tns:GetFileResponse"></wsdl:part></wsdl:message><wsdl:portType msc:usingSession="false" name="IFileService"><wsdl:operation name="GetFile"><wsdl:input wsa10:Action="http://tempuri.org/IFileService/GetFile" message="tns:IFileService_GetFile_InputMessage"></wsdl:input><wsdl:output wsa10:Action="http://tempuri.org/IFileService/GetFileResponse" message="tns:IFileService_GetFile_OutputMessage"></wsdl:output></wsdl:operation></wsdl:portType><wsdl:binding name="WSHttpBinding_IFileService" type="tns:IFileService"><wsp:PolicyReference URI="#WSHttpBinding_IFileService_policy"></wsp:PolicyReference><soap12:binding transport="http://schemas.xmlsoap.org/soap/http"></soap12:binding><wsdl:operation name="GetFile"><soap12:operation soapAction="http://tempuri.org/IFileService/GetFile" style="document"></soap12:operation><wsdl:input><wsp:PolicyReference URI="#WSHttpBinding_IFileService_GetFile_Input_policy"></wsp:PolicyReference><soap12:body use="literal"></soap12:body></wsdl:input><wsdl:output><wsp:PolicyReference URI="#WSHttpBinding_IFileService_GetFile_output_policy"></wsp:PolicyReference><soap12:body use="literal"></soap12:body></wsdl:output></wsdl:operation></wsdl:binding><wsdl:service name="FileService"><wsdl:port name="WSHttpBinding_IFileService" binding="tns:WSHttpBinding_IFileService"><soap12:address location="http://localhost:8080/FileService"></soap12:address><wsa10:EndpointReference><wsa10:Address>http://localhost:8080/FileService</wsa10:Address><Identity xmlns="http://schemas.microsoft.com/ws/2004/04/addressingidentityextension"><Upn>shawnc@corp.avanade.org</Upn></Identity></wsa10:EndpointReference></wsdl:port></wsdl:service></wsdl:definitions></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681148767</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset)&#xD;&#xA;   at System.ServiceModel.Channels.MessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9816407Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9816407-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.NullMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><HttpRequest><Method>GET</Method><QueryString>xsd=xsd0</QueryString><WebHeaders><Host>localhost:8080</Host></WebHeaders></HttpRequest><s:Envelope xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:s="http://www.w3.org/2003/05/soap-envelope"><s:Header><a:To s:mustUnderstand="1">http://localhost:8080/FileService?xsd=xsd0</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681175842</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ProcessHttpAddressing(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9816407Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9816407-04:00" Source="TransportSend" Type="System.ServiceModel.Description.ServiceMetadataExtension+HttpGetImpl+XmlSchemaMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><Addressing><Action></Action></Addressing><HttpResponse><StatusCode>OK</StatusCode><WebHeaders><Content-Type>text/xml; charset="UTF-8"</Content-Type></WebHeaders></HttpResponse><?xml version="1.0" encoding="utf-8"?><xs:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://tempuri.org/"><xs:element name="GetFile"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="fileName" nillable="true" type="xs:string"></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="GetFileResponse"><xs:complexType><xs:sequence><xs:element minOccurs="0" name="GetFileResult" nillable="true" type="xs:base64Binary"></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681179494</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset)&#xD;&#xA;   at System.ServiceModel.Channels.MessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9916685Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9916685-04:00" Source="TransportReceive" Type="System.ServiceModel.Channels.NullMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><HttpRequest><Method>GET</Method><QueryString>xsd=xsd1</QueryString><WebHeaders><Host>localhost:8080</Host></WebHeaders></HttpRequest><s:Envelope xmlns:a="http://www.w3.org/2005/08/addressing" xmlns:s="http://www.w3.org/2003/05/soap-envelope"><s:Header><a:To s:mustUnderstand="1">http://localhost:8080/FileService?xsd=xsd1</a:To></s:Header><s:Body></s:Body></s:Envelope></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681204151</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ProcessHttpAddressing(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpInput.ParseIncomingMessage()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.CreateMessage()&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent><E2ETraceEvent xmlns="http://schemas.microsoft.com/2004/06/E2ETraceEvent"><System xmlns="http://schemas.microsoft.com/2004/06/windows/eventlog/system"><EventID>0</EventID><Type>3</Type><SubType Name="Information">0</SubType><Level>8</Level><TimeCreated SystemTime="2006-06-15T15:13:45.9916685Z" /><Source Name="System.ServiceModel.MessageLogging" /><Correlation ActivityID="{00000000-0000-0000-0000-000000000000}" /><Execution ProcessName="WcfHost" ProcessID="5100" ThreadID="5" /><Channel/><Computer>XPSHAWNCI</Computer></System><ApplicationData><TraceData><DataItem><MessageLogTraceRecord Time="2006-06-15T11:13:45.9916685-04:00" Source="TransportSend" Type="System.ServiceModel.Description.ServiceMetadataExtension+HttpGetImpl+XmlSchemaMessage" xmlns="http://schemas.microsoft.com/2004/06/ServiceModel/Management/MessageTrace"><Addressing><Action></Action></Addressing><HttpResponse><StatusCode>OK</StatusCode><WebHeaders><Content-Type>text/xml; charset="UTF-8"</Content-Type></WebHeaders></HttpResponse><?xml version="1.0" encoding="utf-8"?><xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/"><xs:element name="anyType" nillable="true" type="xs:anyType"></xs:element><xs:element name="anyURI" nillable="true" type="xs:anyURI"></xs:element><xs:element name="base64Binary" nillable="true" type="xs:base64Binary"></xs:element><xs:element name="boolean" nillable="true" type="xs:boolean"></xs:element><xs:element name="byte" nillable="true" type="xs:byte"></xs:element><xs:element name="dateTime" nillable="true" type="xs:dateTime"></xs:element><xs:element name="decimal" nillable="true" type="xs:decimal"></xs:element><xs:element name="double" nillable="true" type="xs:double"></xs:element><xs:element name="float" nillable="true" type="xs:float"></xs:element><xs:element name="int" nillable="true" type="xs:int"></xs:element><xs:element name="long" nillable="true" type="xs:long"></xs:element><xs:element name="QName" nillable="true" type="xs:QName"></xs:element><xs:element name="short" nillable="true" type="xs:short"></xs:element><xs:element name="string" nillable="true" type="xs:string"></xs:element><xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte"></xs:element><xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt"></xs:element><xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong"></xs:element><xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort"></xs:element><xs:element name="char" nillable="true" type="tns:char"></xs:element><xs:simpleType name="char"><xs:restriction base="xs:int"></xs:restriction></xs:simpleType><xs:element name="duration" nillable="true" type="tns:duration"></xs:element><xs:simpleType name="duration"><xs:restriction base="xs:duration"><xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?"></xs:pattern><xs:minInclusive value="-P10675199DT2H48M5.4775808S"></xs:minInclusive><xs:maxInclusive value="P10675199DT2H48M5.4775807S"></xs:maxInclusive></xs:restriction></xs:simpleType><xs:element name="guid" nillable="true" type="tns:guid"></xs:element><xs:simpleType name="guid"><xs:restriction base="xs:string"><xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"></xs:pattern></xs:restriction></xs:simpleType><xs:attribute name="FactoryType" type="xs:QName"></xs:attribute></xs:schema></MessageLogTraceRecord></DataItem></TraceData><System.Diagnostics xmlns="http://schemas.microsoft.com/2004/08/System.Diagnostics"><LogicalOperationStack></LogicalOperationStack><Timestamp>1119681207996</Timestamp><Callstack>   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)&#xD;&#xA;   at System.Environment.get_StackTrace()&#xD;&#xA;   at System.Diagnostics.TraceEventCache.get_Callstack()&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.WriteFooter(TraceEventCache eventCache)&#xD;&#xA;   at System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache eventCache, String source, TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.Diagnostics.TraceSource.TraceData(TraceEventType eventType, Int32 id, Object data)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogInternal(MessageLogTraceRecord record)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessageImpl(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Diagnostics.MessageLogger.LogMessage(Message&amp; message, XmlReader reader, MessageLoggingSource source)&#xD;&#xA;   at System.ServiceModel.Channels.TextMessageEncoderFactory.TextMessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager, Int32 messageOffset)&#xD;&#xA;   at System.ServiceModel.Channels.MessageEncoder.WriteMessage(Message message, Int32 maxMessageSize, BufferManager bufferManager)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.SerializeBufferedMessage(Message message)&#xD;&#xA;   at System.ServiceModel.Channels.HttpOutput.Send()&#xD;&#xA;   at System.ServiceModel.Channels.IndigoHttpContext.OnReply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message, TimeSpan timeout)&#xD;&#xA;   at System.ServiceModel.Channels.RequestContext.Reply(Message message)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.Reply(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessageCleanup(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc&amp; rpc)&#xD;&#xA;   at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.Dispatch(IRequestContext request, Boolean cleanThread, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.HandleRequest(IRequestContext request, OperationContext currentOperationContext)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.AsyncMessagePump(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Dispatcher.ChannelHandler.OnAsyncReceiveComplete(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.AsyncResult.Complete(Boolean completedSynchronously)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.AsyncQueueReader.Set(T item)&#xD;&#xA;   at System.ServiceModel.Channels.InputQueue`1.EnqueueAndDispatch(T item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.SingletonChannelAcceptor`3.Enqueue(QueueItemType item, ItemDequeuedCallback dequeuedCallback, Boolean canDispatchOnThisThread)&#xD;&#xA;   at System.ServiceModel.Channels.HttpReplyChannelAcceptor.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener`1.HandleContext(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.HttpChannelListener.HttpContextReceived(IndigoHttpContext context, ItemDequeuedCallback callback)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContextCore(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.Channels.SharedHttpTransportManager.OnGetContext(IAsyncResult result)&#xD;&#xA;   at System.ServiceModel.DiagnosticUtility.AsyncThunk.UnhandledExceptionFrame(IAsyncResult result)&#xD;&#xA;   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)&#xD;&#xA;   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)&#xD;&#xA;   at System.Net.ListenerAsyncResult.WaitCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped)&#xD;&#xA;   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)</Callstack></System.Diagnostics></ApplicationData></E2ETraceEvent>